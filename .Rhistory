str(hd)
dim(hd)
hd$HDI.Rank <- hd$RankHDI
hd$Human.Development.Index..HDI. <- hd$HDI
hd$Life.Expectancy.at.Birth <- hd$LifeExp
hd$Expected.Years.of.Education <- hd$educationExp
hd$Mean.Years.of.Education <- hd$educationMean
hd$Gross.National.Income..GNI..per.Capita <- hd$GNI
hd$GNI.per.Capita.Rank.Minus.HDI.Rank <- hd$GNIandHDI
hd
str(hd)
library(MASS)
data("Boston")
str(Boston)
dim(Boston)
str(Boston)
summary(Boston)
pairs(Boston)
library(tidyverse)
install.packages("corrplot")
install.packages("corrplot")
library(corrplot)
cor_matrix<-cor(Boston) %>% round(2)
print(cor_matrix)
plot(cor_matrix)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos ="b", tl.ps = "d", tl.cex = 0.6)
summary(boston_scaled)
summary(Boston)
boston_scaled <- scale(Boston)
summary(boston_scaled)
boston_scaled <- scale(Boston)
summary(boston_scaled)
class(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
summary(scaled_crim)
scaled_crim <- boston_scaled$crim
summary(scaled_crim)
bins <- quantile(scaled_crim)
bins
crime <- cut(scaled_crim, breaks = bins, include.lowest = TRUE, labels = c("low", "med_low", "med_high", "high"))
table(crime)
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
correct_classes <- test$crime
test <- boston_scaled[-ind,]
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
lda.fit <- lda(crim ~ ., data = train)
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crim)
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 2)
correct_classes <- test$crime
tests <- dplyr::select(test, -crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 2)
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
n <- nrow(boston_scaled)
n <- nrow(boston_scaled)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 2)
boston_scaled <- scale(Boston)
summary(boston_scaled)
class(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
scaled_crim <- boston_scaled$crim
summary(scaled_crim)
bins <- quantile(scaled_crim)
bins
crime <- cut(scaled_crim, breaks = bins, include.lowest = TRUE, labels = c("low", "med_low", "med_high", "high"))
table(crime)
boston_scaled <- dplyr::select(boston_scaled, -crim)
table(crime)
data("Boston")
summary(Boston)
boston_scaled <- scale(Boston)
summary(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
library(MASS)
data('Boston')
summary(Boston)
boston_scaled <- scale(Boston)
summary(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
dist_eu <- dist(boston_scaled)
summary(dist_eu)
dist_eu <- dist(Boston)
library(MASS)
data('Boston')
summary(Boston)
boston_scaled <- scale(Boston)
summary(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
dist_eu <- dist(boston_scaled)
summary(dist_eu)
km <-kmeans(dist_eu, centers = 15)
pairs(Boston, col = km$cluster)
km <-kmeans(dist_eu, centers = 5)
pairs(Boston, col = km$cluster)
km <-kmeans(dist_eu, centers = 3)
pairs(Boston, col = km$cluster)
pairs(boston_scaled, col = km$cluster)
ggpairs(boston_scaled, col = km$cluster)
library(ggplot2)
ggpairs(boston_scaled, col = km$cluster)
require(GGally)
require(ggplot2)
ggpairs(boston_scaled, col = km$cluster)
library(MASS)
data("Boston")
str(Boston)
summary(Boston)
pairs(Boston)
pairs(Boston)
library(tidyverse)
install.packages("corrplot")
library(corrplot)
cor_matrix<-cor(Boston) %>% round(2)
print(cor_matrix)
print(cor_matrix)
plot(cor_matrix)
print(cor_matrix)
plot(cor_matrix)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos ="b", tl.ps = "d", tl.cex = 0.6)
boston_scaled <- scale(Boston)
summary(boston_scaled)
class(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
scaled_crim <- boston_scaled$crim
summary(scaled_crim)
bins <- quantile(scaled_crim)
bins
crime <- cut(scaled_crim, breaks = bins, include.lowest = TRUE, labels = c("low", "med_low", "med_high", "high"))
table(crime)
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 2)
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
library(MASS)
data('Boston')
summary(Boston)
boston_scaled <- scale(Boston)
summary(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
dist_eu <- dist(boston_scaled)
summary(dist_eu)
km <-kmeans(dist_eu, centers = 3)
pairs(boston_scaled, col = km$cluster)
km <-kmeans(dist_eu, centers = 5)
pairs(boston_scaled, col = km$cluster)
require(GGally)
require(ggplot2)
ggpairs(boston_scaled, col = km$cluster)
library(MASS)
data("Boston")
str(Boston)
dim(Boston)
summary(Boston)
pairs(Boston)
library(tidyverse)
install.packages("corrplot")
library(corrplot)
cor_matrix<-cor(Boston) %>% round(2)
print(cor_matrix)
plot(cor_matrix)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos ="b", tl.ps = "d", tl.cex = 0.6)
boston_scaled <- scale(Boston)
summary(boston_scaled)
class(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
scaled_crim <- boston_scaled$crim
summary(scaled_crim)
bins <- quantile(scaled_crim)
bins
crime <- cut(scaled_crim, breaks = bins, include.lowest = TRUE, labels = c("low", "med_low", "med_high", "high"))
table(crime)
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 2)
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
library(MASS)
data('Boston')
summary(Boston)
boston_scaled <- scale(Boston)
summary(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
dist_eu <- dist(boston_scaled)
summary(dist_eu)
km <-kmeans(dist_eu, centers = 3)
pairs(boston_scaled, col = km$cluster)
require(GGally)
require(ggplot2)
ggpairs(boston_scaled, col = km$cluster)
library(MASS)
data("Boston")
str(Boston)
dim(Boston)
summary(Boston)
pairs(Boston)
library(tidyverse)
install.packages("corrplot")
library(corrplot)
cor_matrix<-cor(Boston) %>% round(2)
print(cor_matrix)
plot(cor_matrix)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos ="b", tl.ps = "d", tl.cex = 0.6)
boston_scaled <- scale(Boston)
summary(boston_scaled)
class(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
scaled_crim <- boston_scaled$crim
summary(scaled_crim)
bins <- quantile(scaled_crim)
bins
crime <- cut(scaled_crim, breaks = bins, include.lowest = TRUE, labels = c("low", "med_low", "med_high", "high"))
table(crime)
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 2)
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
library(MASS)
data('Boston')
summary(Boston)
boston_scaled <- scale(Boston)
summary(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
dist_eu <- dist(boston_scaled)
summary(dist_eu)
km <-kmeans(dist_eu, centers = 3)
pairs(boston_scaled, col = km$cluster)
install.packages(GGally)
install.packages(ggplot2)
ggpairs(boston_scaled, col = km$cluster)
install.packages(GGally)
install.packages(GGally)
install.packages("Gally")
install.packages("Gally")
install.packages("ggplot2")
install.packages("ggplot2")
ggpairs(boston_scaled, col = km$cluster)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
ggpairs(boston_scaled, col = km$cluster)
ggplot(boston_scaled, col = km$cluster)
p <- ggplot(boston_scaled = data, mapping = mapping) +
geom_point() +
geom_smooth(method=loess, fill="red", color= km$cluster, ...) +
geom_smooth(method=lm, fill="blue", color="blue", ...)
p <- ggplot(boston_scaled = data, col = km$cluster)
geom_point() +
geom_smooth(method=loess, fill="red", color= km$cluster, ...) +
geom_smooth(method=lm, fill="blue", color="blue", ...)
p <- ggplot(boston_scaled = data, col = km$cluster)
p
p
p <- ggplot(boston_scaled = data, col = km$cluster)
p
p <- ggplot(boston_scaled, col = km$cluster)
p
p <- ggplot(boston_scaled, col = km$cluster) + geom_point()
p
p <- ggplot(boston_scaled, col = km$cluster) + geom_point()
p <- ggpairs(boston_scaled, col = km$cluster) + geom_point()
p
p <- ggpairs(boston_scaled, col = km$cluster)
p
ggpairs(data = boston_scaled, columns=1:3, title="Clusters of the Boston_scaled dataset", colour = km$cluster)
ggpairs(boston_scaled, columns=1:3, title="Clusters of the Boston_scaled dataset", colour = km$cluster)
library(GGally)
ggpairs(boston_scaled, columns=1:3, title="Clusters of the Boston_scaled dataset", colour = km$cluster)
library(ggplot2)
library(GGally)
ggpairs(boston_scaled, columns=1:3, title="Clusters of the Boston_scaled dataset", colour = km$cluster)
data(boston_scaled, package="reshape")
library(MASS)
data('Boston')
summary(Boston)
boston_scaled <- scale(Boston)
summary(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
dist_eu <- dist(boston_scaled)
summary(dist_eu)
km <-kmeans(dist_eu, centers = 3)
pairs(boston_scaled, col = km$cluster)
install.packages("Gally")
install.packages("Gally")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(GGally)
data(boston_scaled, package="reshape")
boston_scaled(tips, package="reshape")
data(boston_scaled)
boston_scaled
boston_scaled
library(MASS)
data('Boston')
summary(Boston)
boston_scaled <- scale(Boston)
summary(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
dist_eu <- dist(boston_scaled)
summary(dist_eu)
km <-kmeans(dist_eu, centers = 3)
pairs(boston_scaled, col = km$cluster)
install.packages("Gally")
install.packages("Gally")
install.packages("ggplot2")
library(ggplot2)
library(GGally)
install.packages("ggplot2")
install.packages("ggplot2")
ggpairs(boston_scaled, columns=1:3, title="Clusters of the Boston_scaled dataset", colour = km$cluster)
km <-kmeans(dist_eu, centers = 5)
pairs(boston_scaled, col = km$cluster)
pairs(boston_scaled, col = km$cluster)
install.packages("Gally")
install.packages("ggplot2")
library(ggplot2)
library(GGally)
km <-kmeans(dist_eu, centers = 7)
pairs(boston_scaled, col = km$cluster)
```{r child = "chapter1.Rmd"}
```{r child = "chapter2.Rmd"}
```{r child = "chapter4.Rmd"}
summary(Boston)
pairs(Boston)
pairs(Boston)
library(tidyverse)
install.packages("corrplot")
library(corrplot)
cor_matrix<-cor(Boston) %>% round(2)
print(cor_matrix)
print(cor_matrix)
plot(cor_matrix)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos ="b", tl.ps = "d", tl.cex = 0.6)
library(MASS)
data("Boston")
library(tidyverse)
install.packages("corrplot")
library(corrplot)
str(Boston)
dim(Boston)
install.packages("corrplot")
install.packages("corrplot")
install.packages("corrplot")
library(corrplot)
library("corrplot")
install.packages("corrplot")
install.packages("corrplot")
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
install.packages("corrplot")
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
library("corrplot")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("corrplot")
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
library("corrplot")
install.packages("corrplot")
install.packages("corrplot")
install.packages("tidyverse")
library(MASS)
data("Boston")
install.packages("ggplot2")
install.packages("corrplot")
install.packages("tidyverse")
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
str(Boston)
dim(Boston)
summary(Boston)
pairs(Boston)
cor_matrix<-cor(Boston) %>% round(2)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("corrplot")
install.packages("tidyverse")
library(ggplot2)
library(corrplot)
library(tidyverse)
library(corrplot)
library(tidyverse)
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
